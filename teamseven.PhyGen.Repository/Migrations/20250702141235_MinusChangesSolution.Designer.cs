// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using teamseven.PhyGen.Repository.Models;

#nullable disable

namespace teamseven.PhyGen.Repository.Migrations
{
    [DbContext(typeof(teamsevenphygendbContext))]
    [Migration("20250702141235_MinusChangesSolution")]
    partial class MinusChangesSolution
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Chapter__3214EC0750862B44");

                    b.HasIndex(new[] { "SemesterId" }, "IX_Chapter_SemesterId");

                    b.ToTable("Chapters", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("ExamTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Exam__3214EC07BBB96DEC");

                    b.HasIndex(new[] { "CreatedByUserId" }, "IX_Exam_CreatedByUserId");

                    b.HasIndex(new[] { "ExamTypeId" }, "IX_Exam_ExamTypeId");

                    b.HasIndex(new[] { "IsDeleted" }, "IX_Exam_IsDeleted");

                    b.HasIndex(new[] { "LessonId" }, "IX_Exam_LessonId");

                    b.ToTable("Exams", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.ExamHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ActionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ExamHist__3214EC07112EFF0E");

                    b.HasIndex(new[] { "ExamId" }, "IX_ExamHistory_ExamId");

                    b.HasIndex(new[] { "ActionByUserId" }, "IX_IX_ExamHistory_ActionByUserId");

                    b.ToTable("ExamHistories", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.ExamQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ExamQuestion__Id");

                    b.HasIndex(new[] { "ExamId" }, "IX_ExamQuestion_ExamId");

                    b.HasIndex(new[] { "QuestionId" }, "IX_ExamQuestion_QuestionId");

                    b.ToTable("ExamQuestions", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.ExamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__ExamType__3214EC0759F4F1AF");

                    b.HasIndex(new[] { "Name" }, "UQ__ExamType__737584F619DE264A")
                        .IsUnique();

                    b.ToTable("ExamTypes", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Grade__3214EC07726422EF");

                    b.HasIndex(new[] { "Name" }, "UQ__Grade__737584F6EABA19DB")
                        .IsUnique();

                    b.ToTable("Grades", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Lesson__3214EC07A753DB40");

                    b.HasIndex(new[] { "ChapterId" }, "IX_Lesson_ChapterId");

                    b.ToTable("Lessons", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionSource")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Question__3214EC07E85416E6");

                    b.HasIndex(new[] { "CreatedByUserId" }, "IX_Question_CreatedByUserId");

                    b.HasIndex(new[] { "LessonId" }, "IX_Question_LessonId");

                    b.ToTable("Questions", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC0736E8263A");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B616076721B42")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Semester__3214EC073D10267A");

                    b.HasIndex(new[] { "GradeId" }, "IX_Semester_GradeId");

                    b.ToTable("Semesters", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Solution__3214EC0789D85D64");

                    b.HasIndex(new[] { "CreatedByUserId" }, "IX_Solution_CreatedByUserId");

                    b.HasIndex(new[] { "IsApproved" }, "IX_Solution_IsApproved");

                    b.HasIndex(new[] { "IsDeleted" }, "IX_Solution_IsDeleted");

                    b.HasIndex(new[] { "QuestionId" }, "IX_Solution_QuestionId");

                    b.ToTable("Solutions", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.SolutionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ReportDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ReportedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("SolutionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.HasKey("Id")
                        .HasName("PK__Solution__3214EC07C9C74095");

                    b.HasIndex(new[] { "ReportedByUserId" }, "IX_SolutionReport_ReportedByUserId");

                    b.HasIndex(new[] { "SolutionId" }, "IX_SolutionReport_SolutionId");

                    b.ToTable("SolutionReports", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.SolutionsLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("GeneratedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Link")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SolutionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Solution__3214EC0737663E7D");

                    b.HasIndex(new[] { "SolutionId" }, "IX_SolutionsLink_SolutionId");

                    b.ToTable("SolutionsLinks", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.SubscriptionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<string>("SubscriptionCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("SubscriptionPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Subscrip__3214EC07C6E713D8");

                    b.HasIndex(new[] { "SubscriptionCode" }, "IX_SubscriptionType_SubscriptionCode");

                    b.HasIndex(new[] { "UpdatedBy" }, "IX_SubscriptionType_UpdatedBy");

                    b.HasIndex(new[] { "SubscriptionCode" }, "UQ__Subscrip__A940962CCEF18247")
                        .IsUnique();

                    b.ToTable("SubscriptionTypes", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC0751B15CB7");

                    b.HasIndex(new[] { "Email" }, "IX_Users_Email");

                    b.HasIndex(new[] { "IsActive" }, "IX_Users_IsActive");

                    b.HasIndex(new[] { "LastLoginAt" }, "IX_Users_LastLoginAt");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.HasIndex(new[] { "UpdatedBy" }, "IX_Users_UpdatedBy");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105349FB12D7F")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.UserSocialProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProfileUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__UserSoci__3214EC07C47A8C4E");

                    b.HasIndex(new[] { "UserId" }, "IX_UserSocialProviders_UserId");

                    b.HasIndex(new[] { "ProviderName", "ProviderId" }, "UQ_UserSocialProviders_Provider")
                        .IsUnique();

                    b.ToTable("UserSocialProviders", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.UserSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PaymentGatewayTransactionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__UserSubs__3214EC07715BEBD0");

                    b.HasIndex(new[] { "IsActive" }, "IX_UserSubscriptions_IsActive");

                    b.HasIndex(new[] { "PaymentStatus" }, "IX_UserSubscriptions_PaymentStatus");

                    b.HasIndex(new[] { "SubscriptionTypeId" }, "IX_UserSubscriptions_SubscriptionTypeId");

                    b.HasIndex(new[] { "UserId" }, "IX_UserSubscriptions_UserId");

                    b.ToTable("UserSubscriptions", (string)null);
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Chapter", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.Semester", "Semester")
                        .WithMany("Chapters")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Chapter__Semeste__2645B050");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Exam", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "CreatedByUser")
                        .WithMany("Exams")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Exam__CreatedByU__3493CFA7");

                    b.HasOne("teamseven.PhyGen.Repository.Models.ExamType", "ExamType")
                        .WithMany("Exams")
                        .HasForeignKey("ExamTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Exam__ExamTypeId__339FAB6E");

                    b.HasOne("teamseven.PhyGen.Repository.Models.Lesson", "Lesson")
                        .WithMany("Exams")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Exam__LessonId__32AB8735");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ExamType");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.ExamHistory", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "ActionByUser")
                        .WithMany("ExamHistories")
                        .HasForeignKey("ActionByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__ExamHisto__Actio__395884C4");

                    b.HasOne("teamseven.PhyGen.Repository.Models.Exam", "Exam")
                        .WithMany("ExamHistories")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ExamHisto__ExamI__3864608B");

                    b.Navigation("ActionByUser");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.ExamQuestion", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.Exam", "Exam")
                        .WithMany("ExamQuestions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ExamQuest__ExamI__47A6A41B");

                    b.HasOne("teamseven.PhyGen.Repository.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__ExamQuest__Quest__489AC854");

                    b.Navigation("Exam");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Lesson", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.Chapter", "Chapter")
                        .WithMany("Lessons")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Lesson__ChapterI__2A164134");

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Question", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "CreatedByUser")
                        .WithMany("Questions")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Question__Create__3E1D39E1");

                    b.HasOne("teamseven.PhyGen.Repository.Models.Lesson", "Lesson")
                        .WithMany("Questions")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Question__Lesson__3D2915A8");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Semester", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.Grade", "Grade")
                        .WithMany("Semesters")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Semester__GradeI__22751F6C");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Solution", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "CreatedByUser")
                        .WithMany("Solutions")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Solution__Create__4F47C5E3");

                    b.HasOne("teamseven.PhyGen.Repository.Models.Question", "Question")
                        .WithMany("Solutions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Solution__Questi__4E53A1AA");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.SolutionReport", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "ReportedByUser")
                        .WithMany("SolutionReports")
                        .HasForeignKey("ReportedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__SolutionR__Repor__55009F39");

                    b.HasOne("teamseven.PhyGen.Repository.Models.Solution", "Solution")
                        .WithMany("SolutionReports")
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SolutionR__Solut__540C7B00");

                    b.Navigation("ReportedByUser");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.SolutionsLink", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.Solution", "Solution")
                        .WithMany("SolutionsLinks")
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Solutions__Solut__58D1301D");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.SubscriptionType", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "UpdatedByNavigation")
                        .WithMany("SubscriptionTypes")
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Subscript__Updat__0F624AF8");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.User", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleId__09A971A2");

                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "UpdatedByNavigation")
                        .WithMany("InverseUpdatedByNavigation")
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("FK__Users__UpdatedBy__0A9D95DB");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByNavigation");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.UserSocialProvider", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "User")
                        .WithMany("UserSocialProviders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserSocia__UserI__14270015");

                    b.Navigation("User");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.UserSubscription", b =>
                {
                    b.HasOne("teamseven.PhyGen.Repository.Models.SubscriptionType", "SubscriptionType")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("SubscriptionTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__UserSubsc__Subsc__1AD3FDA4");

                    b.HasOne("teamseven.PhyGen.Repository.Models.User", "User")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserSubsc__UserI__19DFD96B");

                    b.Navigation("SubscriptionType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Chapter", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Exam", b =>
                {
                    b.Navigation("ExamHistories");

                    b.Navigation("ExamQuestions");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.ExamType", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Grade", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Lesson", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Question", b =>
                {
                    b.Navigation("Solutions");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Semester", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.Solution", b =>
                {
                    b.Navigation("SolutionReports");

                    b.Navigation("SolutionsLinks");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.SubscriptionType", b =>
                {
                    b.Navigation("UserSubscriptions");
                });

            modelBuilder.Entity("teamseven.PhyGen.Repository.Models.User", b =>
                {
                    b.Navigation("ExamHistories");

                    b.Navigation("Exams");

                    b.Navigation("InverseUpdatedByNavigation");

                    b.Navigation("Questions");

                    b.Navigation("SolutionReports");

                    b.Navigation("Solutions");

                    b.Navigation("SubscriptionTypes");

                    b.Navigation("UserSocialProviders");

                    b.Navigation("UserSubscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
